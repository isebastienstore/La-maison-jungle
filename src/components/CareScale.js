
// Ici, il s'agit d'une mani√®re de faire.
//Vous auriez aussi pu utiliser une fonction qui retourne l'√©l√©ment souhait√©, ou bien faire directement des conditions
const quantityLabel = {
    1: 'peu',
    2: 'mod√©r√©ment',
    3: 'beaucoup'
}

function CareScale(props) {
    /* On √©vite de multiplier les d√©clarations qui sans cette syntaxe auraient √©t√© :
     const scaleValue = props.scaleValue et
     const careType = props.careType

      On pouvait aussi faire function CareScale({scaleValue, careType}) direectement
     */

    const {scaleValue, careType} = props

    const range = [1, 2, 3]
    const scaleType = careType === 'light' ? '‚òÄÔ∏è' : 'üíß'

    return (
        <div onClick={() =>
            alert(
                `Cette plante requiert ${quantityLabel[scaleValue]} ${
                    careType === 'light' ? 'de lumi√®re' : "d'arrosage"
                }`
            )
        }>
            {range.map((rangeElem) =>
                scaleValue >= rangeElem ? <span key={rangeElem.toString()}>{scaleType}</span> : null
            )}
        </div>
    )
}

export default CareScale